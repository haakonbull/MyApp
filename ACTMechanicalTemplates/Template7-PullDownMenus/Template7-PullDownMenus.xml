<!--
Pull Down Menus Extension Template

Goal of this extension:
    1. Demonstrate how to implement an ACT load with properties having pull-down menus.
    2. Implement both static and dynamic content for pull-down menus.

Main contents:
    1. One XML file with an ACT load objects named "Pull Down Menus Load"
    2. One Python file controlling all the callbacks (pull_down_menus.py)

Usage instructions:
    1. Copy this XML and the folder (Template7-PullDownMenus) to %appdata%\Ansys\v182\ACT\extensions.
    2. Open Mechanical and use the extension
-->

<extension version="2" name="Template7-PullDownMenus">

  <guid shortid="Template7-PullDownMenus">69dd5563-1257-42f1-8767-2391d6cc847d</guid>

  <!-- Python file that contains the callbacks functions. -->
  <script src="pull_down_menus.py" />

  <!-- Declare the extension interface (mainly toolbar). -->
  <interface context="Mechanical">

    <!-- The image folder. -->
    <images>images</images>

    <!-- Declare a toolbar with one entry (a button) and a click callback associated.
         The callback function CreatePullDownMenusLoad is defined in the python file. -->
    <toolbar name="PullDownMenusToolbar" caption="Pull Down Menus">
      <entry name="PullDownMenusLoad" icon="support">
        <callbacks>
          <onclick>CreatePullDownMenusLoad</onclick>
        </callbacks>
      </entry>
    </toolbar>

  </interface>

  <!-- Simulation data, e.g loads.-->
  <simdata context="Mechanical">

    <!-- Declare the load with 2 properties: StaticPullDown and DynamicPullDown -->
    <load name="PullDownMenusLoad" version="1" caption="Pull Down Menus Load" icon="support" issupport="true" color="#000FFF">

      <!-- The static pull down menu. 
           Note the control field is set to "select" and it uses the "attribute" tag inside to define the static values. -->
      <property name="StaticPullDown" caption="Static Pull Down Menu" control="select">
        <!-- The menu values are separated by commas in the "options" attribute. -->
        <attributes options="Option 1,Option 2,Option 3" />
      </property>

      <!-- The dynamic pull down menu. 
           The control field is set to "select" and it uses 2 callbacks to fill and check the values.-->
      <property name="DynamicPullDown" caption="Dynamic Pull Down Menu" control="select">
        <callbacks>
          <!-- OnActivate callback: it will be called each time the property is used.
               The python callback function "OnActivateDynamicPullDown" will fill dynamically the  pull down menu.-->
          <onactivate>OnActivateDynamicPullDown</onactivate>
          <!-- IsValid callback: this callback will be called to check if the inner values are valid or not.
               It's useful here to synchronize the two menus, but not mandatory for defining the dynamic menu.-->
          <isvalid>IsValidDynamicPullDown</isvalid>
        </callbacks>
      </property>

    </load>

  </simdata>

</extension>